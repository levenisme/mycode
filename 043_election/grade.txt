Grading at 10/15/2018:19:52:16.738769
For commit ID 305e6a692e9874a44a5eaa9467f38dea063f9321
Good for you: you committed election.h
election.c exists (good)
Starting by grading FUNCTIONALITY (90% of grade)
Attempting to compile election.c
rm -f *~ printStates printEVotes printRecounts printLargeWin
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printStates.o -o printStates
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printEVotes.o -o printEVotes
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printRecounts.o -o printRecounts
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printLargeWin.o -o printLargeWin
#################################################
testcase1 of step1:
valgrind reported memory errors [0/1]
#################################################
testcase2 of step1:
valgrind reported memory errors [0/1]
#################################################
testcase3 of step1:
valgrind reported memory errors [0/1]
#################################################
testcase4 of step1:
valgrind reported memory errors [0/1]
#################################################
testcase5 of step1:
valgrind reported memory errors [0/10]
#################################################
testcase6 of step1:
Difficult corner cases
valgrind reported memory errors [0/6]
#################################################
testcase1 of step2:
Your output is correct [8/8]
#################################################
testcase2 of step2:
Your output is correct [8/8]
#################################################
testcase3 of step2:
Your output is correct [8/8]
#################################################
testcase4 of step2:
Difficult corner cases
Your output is correct [6/6]
#################################################
testcase1 of step3:
Your output is correct [6/6]
#################################################
testcase2 of step3:
Your output is incorrect [0/6]
#################################################
testcase3 of step3:
Your output is correct [6/6]
#################################################
testcase4 of step3:
Difficult corner cases
Your output is correct [2/2]
#################################################
testcase1 of step4:
Your output is correct [8/8]
#################################################
testcase2 of step4:
Your output is correct [8/8]
#################################################
testcase3 of step4:
Your output is correct [8/8]
#################################################
testcase4 of step4:
Difficult corner cases
Your output is correct [6/6]
Functionality grade: 74 %
This counts for 90% so you get 0.9 * 74 => 66.6 points
--------------------------------------
Style grade (10% of overall)
Abstraction of finding a colon:  0 / 2
Abstraction of converting a string to a number: 2 / 2
Comments: 0 / 2
Variable naming: 0.5 / 2
Other (no global variables, no magic numbers, no strange casts etc)  2 / 2
The comments from the  TA who graded this were:
parseLine function too long and have duplicate code, would be better if you try to deal with the problem with more abstraction, and even better if you use strchr to search for ':' and parse. Nice try to use atoi but think about the data type in the problem and wouldn't strtoul do a better job? Use clear variable names for variables instead of (i,j, temp). You need to write comments (see 13.2.4 Commenting/Documentation)
-------------------------------------------------
Style total 4.5 / 10 


Overall grade is 66.6  + 4.5 = 71.1

Overall Grade: 71.1
